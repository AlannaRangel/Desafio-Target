def next_element_a(sequence):
    # Sequência: 1, 3, 5, 7, __
    return sequence[-1] + 2

def next_element_b(sequence):
    # Sequência: 2, 4, 8, 16, 32, 64, __
    return sequence[-1] * 2

def next_element_c(sequence):
    # Sequência: 0, 1, 4, 9, 16, 25, 36, __
    n = len(sequence)
    return n ** 2

def next_element_d(sequence):
    # Sequência: 4, 16, 36, 64, __
    n = len(sequence) + 1
    return (2 * n) ** 2

def next_element_e(sequence):
    # Sequência de Fibonacci: 1, 1, 2, 3, 5, 8, __
    return sequence[-1] + sequence[-2]

def next_element_f(sequence):
    # Sequência: 2, 10, 12, 16, 17, 18, 19, __
    if sequence[-1] == 19:
        return 20
    return sequence[-1] + 1

def main():
    # Definindo as sequências iniciais
    sequence_a = [1, 3, 5, 7]
    sequence_b = [2, 4, 8, 16, 32, 64]
    sequence_c = [0, 1, 4, 9, 16, 25, 36]
    sequence_d = [4, 16, 36, 64]
    sequence_e = [1, 1, 2, 3, 5, 8]
    sequence_f = [2, 10, 12, 16, 17, 18, 19]

    # Calculando os próximos elementos
    print(f"a) Próximo elemento: {next_element_a(sequence_a)}")
    print(f"b) Próximo elemento: {next_element_b(sequence_b)}")
    print(f"c) Próximo elemento: {next_element_c(sequence_c)}")
    print(f"d) Próximo elemento: {next_element_d(sequence_d)}")
    print(f"e) Próximo elemento: {next_element_e(sequence_e)}")
    print(f"f) Próximo elemento: {next_element_f(sequence_f)}")

if __name__ == "__main__":
    main()
